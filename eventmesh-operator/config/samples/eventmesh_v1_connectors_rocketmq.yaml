#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: ConfigMap
metadata:
  name: connector-rocketmq-config
data:
  server-config.yml: |
    sourceEnable: true
    sinkEnable: true
  sink-config.yml: |
    pubSubConfig:
        meshAddress: runtime-cluster-service:10000
        subject: TopicTest
        idc: FT
        env: PRD
        group: rocketmqSink
        appId: 5031
        userName: rocketmqSinkUser
        passWord: rocketmqPassWord
    connectorConfig:
        connectorName: rocketmqSink
        nameServer: 127.0.0.1:9876
        topic: TopicTest
  source-config.yml: |
    pubSubConfig:
        meshAddress: runtime-cluster-service:10000
        subject: TopicTest
        idc: FT
        env: PRD
        group: rocketmqSource
        appId: 5032
        userName: rocketmqSourceUser
        passWord: rocketmqPassWord
    connectorConfig:
        connectorName: rocketmqSource
        nameserver: 127.0.0.1:9876
        topic: TopicTest
        commitOffsetIntervalMs: 5000
    offsetStorageConfig:
        offsetStorageType: nacos
        offsetStorageAddr: 127.0.0.1:8848
        extensions: {
                        #same with topic
                        dataId: TopicTest,
                        #same with group
                        group: rocketmqSource
        }
---

apiVersion: eventmesh-operator.eventmesh/v1
kind: Connectors
metadata:
  name: connector-rocketmq
spec:
  # size of connector-rocketmq
  size: 1
  # imagePullPolicy is the image pull policy
  imagePullPolicy: Always
  # set DNS policy for the pod
  # dnsPolicy: ClusterFirstWithHostNet
  # define the connector-rocketmq container.
  connectorContainers:
    - name: connector-rocketmq
      # connectorImage is the customized docker image repo of the EventMesh Connectors
      image: alonexc/eventmesh-connectors:connector-rocketmq-1.9.0
      # mount the configuration file to the container.
      volumeMounts:
        - mountPath: "/data/app/eventmesh-connector-rocketmq/conf"
          name: connector-rocketmq-config
      # resources describes the compute resource requirements and limits
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 1024Mi
          cpu: 1000m
  # configuration file settings to be mounted.
  volumes:
    - name: connector-rocketmq-config
      configMap:
        name: connector-rocketmq-config
        items:
          - key: server-config.yml
            path: server-config.yml
          - key: sink-config.yml
            path: sink-config.yml
          - key: source-config.yml
            path: source-config.yml